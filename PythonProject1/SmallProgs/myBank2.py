import sqlite3

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö (—Å—Ç–≤–æ—Ä–∏—Ç—å—Å—è —Ñ–∞–π–ª bank.db)
conn = sqlite3.connect("bank.db")
cur = conn.cursor()

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ, —è–∫—â–æ —ó—ó —â–µ –Ω–µ–º–∞—î
cur.execute("""
CREATE TABLE IF NOT EXISTS bank (
    currency TEXT PRIMARY KEY,
    balance REAL
)
""")

# –ü–æ—á–∞—Ç–∫–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è (–≤—Å—Ç–∞–≤–ª—è—é—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –≤–∞–ª—é—Ç–∞ —â–µ –Ω–µ –¥–æ–¥–∞–Ω–∞)
default_balances = {'USD': 10927, 'EUR': 3800, 'GBP': 30, 'GRN': 30}
for currency, balance in default_balances.items():
    cur.execute("INSERT OR IGNORE INTO bank (currency, balance) VALUES (?, ?)", (currency, balance))
conn.commit()

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É —Å–ª–æ–≤–Ω–∏–∫
cur.execute("SELECT * FROM bank")
bank = dict(cur.fetchall())

print("–ü–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å:", bank)

currencies = ['USD', 'EUR', 'GBP', 'GRN']

while True:
    try:
        selection = int(input("–í–∏–±–µ—Ä—ñ—Ç—å –≤–∞–ª—é—Ç—É (1-USD, 2-EUR, 3-GBP, 4-GRN, 0 - –≤–∏—Ö—ñ–¥): "))
        if selection == 0:
            conn.commit()  # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
            conn.close()
            print("‚úÖ –ë–∞–ª–∞–Ω—Å –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É –±–∞–∑—ñ! üëã –ù–∞ –≤—Å–µ –¥–æ–±—Ä–µ!")
            break
        if selection not in range(1, 5):
            print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 4.")
            continue

        b = float(input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π –±–∞–ª–∞–Ω—Å: "))
        currency = currencies[selection - 1]
        bank[currency] = b

        # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É —É –±–∞–∑—ñ
        cur.execute("UPDATE bank SET balance = ? WHERE currency = ?", (b, currency))

    except ValueError:
        print("‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –≤–≤—ñ–¥! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")